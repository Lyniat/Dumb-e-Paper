<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="_tools_8cpp" kind="file" language="C++">
    <compoundname>Tools.cpp</compoundname>
    <includes refid="_tools_8hpp" local="yes">Tools.hpp</includes>
    <incdepgraph>
      <node id="203">
        <label>Tools.hpp</label>
        <link refid="_tools_8hpp_source"/>
        <childnode refid="204" relation="include">
        </childnode>
      </node>
      <node id="207">
        <label>SPI.h</label>
      </node>
      <node id="214">
        <label>LED.hpp</label>
        <link refid="_l_e_d_8hpp_source"/>
        <childnode refid="204" relation="include">
        </childnode>
      </node>
      <node id="210">
        <label>Website.hpp</label>
        <link refid="_website_8hpp_source"/>
        <childnode refid="204" relation="include">
        </childnode>
      </node>
      <node id="202">
        <label>/Users/laurin/Documents/Uni/Dumb-e-Paper/e-Paper/src/Tools.cpp</label>
        <link refid="_tools_8cpp"/>
        <childnode refid="203" relation="include">
        </childnode>
      </node>
      <node id="212">
        <label>ESP8266mDNS.h</label>
      </node>
      <node id="215">
        <label>Storage.hpp</label>
        <link refid="_storage_8hpp_source"/>
        <childnode refid="216" relation="include">
        </childnode>
        <childnode refid="204" relation="include">
        </childnode>
      </node>
      <node id="206">
        <label>SPIHandler.hpp</label>
        <link refid="_s_p_i_handler_8hpp_source"/>
        <childnode refid="207" relation="include">
        </childnode>
        <childnode refid="204" relation="include">
        </childnode>
      </node>
      <node id="208">
        <label>WiFiHandler.hpp</label>
        <link refid="_wi_fi_handler_8hpp_source"/>
        <childnode refid="204" relation="include">
        </childnode>
      </node>
      <node id="211">
        <label>ESP8266WiFi.h</label>
      </node>
      <node id="213">
        <label>MainStates.hpp</label>
        <link refid="_main_states_8hpp_source"/>
      </node>
      <node id="205">
        <label>Arduino.h</label>
      </node>
      <node id="209">
        <label>Beacon.hpp</label>
        <link refid="_beacon_8hpp_source"/>
        <childnode refid="204" relation="include">
        </childnode>
        <childnode refid="210" relation="include">
        </childnode>
        <childnode refid="211" relation="include">
        </childnode>
        <childnode refid="212" relation="include">
        </childnode>
      </node>
      <node id="216">
        <label>EEPROM.h</label>
      </node>
      <node id="204">
        <label>main.hpp</label>
        <link refid="main_8hpp_source"/>
        <childnode refid="205" relation="include">
        </childnode>
        <childnode refid="204" relation="include">
        </childnode>
        <childnode refid="206" relation="include">
        </childnode>
        <childnode refid="208" relation="include">
        </childnode>
        <childnode refid="209" relation="include">
        </childnode>
        <childnode refid="213" relation="include">
        </childnode>
        <childnode refid="214" relation="include">
        </childnode>
        <childnode refid="215" relation="include">
        </childnode>
        <childnode refid="203" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;Tools.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="class_tools_1a1bfca9bdc4da2f169dcc382774833dc5" kindref="member">Tools::getValueFromString</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*_data,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>separator,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>data<sp/>=<sp/>_data;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>found<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>strIndex[]<sp/>=<sp/>{0,<sp/>-1};</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxIndex<sp/>=<sp/>data.length()<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/>maxIndex<sp/>&amp;&amp;<sp/>found<sp/>&lt;=<sp/>index;<sp/>i++)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data.charAt(i)<sp/>==<sp/>separator<sp/>||<sp/>i<sp/>==<sp/>maxIndex)</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found++;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strIndex[0]<sp/>=<sp/>strIndex[1]<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strIndex[1]<sp/>=<sp/>(i<sp/>==<sp/>maxIndex)<sp/>?<sp/>i<sp/>+<sp/>1<sp/>:<sp/>i;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strdup((found<sp/>&gt;<sp/>index<sp/>?<sp/>data.substring(strIndex[0],<sp/>strIndex[1])<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">).c_str());</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/laurin/Documents/Uni/Dumb-e-Paper/e-Paper/src/Tools.cpp"/>
  </compounddef>
</doxygen>
